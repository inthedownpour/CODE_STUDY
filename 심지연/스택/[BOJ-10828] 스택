#define _CRT_SECURE_NO_WARNINGS
#include <stdlib.h>
#include <stdio.h>
#include <string.h>

#define STACK_SIZE 10000

int stack[STACK_SIZE];
int top = -1;

int isFull() {
	if (top >= STACK_SIZE - 1) {
		printf("Error : Stack is Full!\n");
		return 1;
	}
	return 0;
}
int isEmpty() {
	if (top == -1) {
		return 1;
	}
	return 0;
}

void push(int data) {
	if (!isFull()) {
		top++;
		stack[top] = data;
		printf("%d\n", data);
	}
}
void pop() {
	if (!isEmpty()) {
		printf("%d \n", stack[top--]);
	}
	else {
		printf("-1\n");
	}
}
void printStack() {
	for (int i = 0; i <= top; i++) {
		printf("%d ", stack[i]);
	}
	printf("\n");
}
int main() {
	int n;
	char str[10];
	scanf("%d", &n);

	for (int i = 0; i < n; i++) {
		scanf("%s", &str);
		if (strcmp("push", str)==0) {
			int num;
			scanf("%d", &num);
			push(num);
		}
		else if (strcmp(str, "pop") == 0) {
			//printf("pop 입력 완료\n");
			pop();
		}
		else if (strcmp(str, "top") == 0) {
			if (top == -1) {
				printf("-1\n");
			}else printf("%d\n", stack[top]);
		}
		else if (strcmp(str, "size") == 0) {
			printf("%d\n", top);
		}
		else if (strcmp(str, "empty") == 0) {
			if (isEmpty()) {
				printf("1\n");
			}
			else printf("0\n");
		}
	}


	return 0;
}
